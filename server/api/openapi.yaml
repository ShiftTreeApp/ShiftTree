info:
  version: 0.0.2
  title: "shifttree API"

openapi: 3.0.3

paths:
  # Login Endpoint. Body contains email and password json file.
  # Response contains a User(username, jwt)
  /login:
    post:
      description: Login
      requestBody:
        description: Request Body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credentials"
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnexpectedError"
  /register:
    post:
      description: Registration
      requestBody:
        description: Request Body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegistrationCredentials"
      responses:
        201:
          description: Successful Registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Registration Sucessful"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnexpectedError"
  /schedules:
    post:
      description: Create a new schedule
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                owner:
                  type: string
                  nullable: true
                name:
                  type: string
                description:
                  type: string
                  nullable: true
      responses:
        201:
          description: Created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - scheduleId
                properties:
                  scheduleId:
                    type: string
                    format: uuid
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnexpectedError"
    get:
      description: Get all schedules owned by the current user and the schedules the user is a member of
      security:
        - Bearer: []
      parameters:
        - name: role
          in: query
          description: Filter schedules by role
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - owner
                - member
                - manager
            default: [owner, member, manager]
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScheduleInfoPreview"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnexpectedError"
  /shiftTreeCodeExisting:
    get:
      summary: Fetches the join-code for shiftree; used on initial click
      security:
        - Bearer: []
      description: Gets the Code for a shiftTree, if the user making request is Owner
      parameters:
        - name: ShiftTreeID
          in: query
          schema:
            $ref: "#/components/schemas/UUID"
          description: ShiftTreeID to fetch code for
          required: true
      responses:
        401:
          description: Unauthorised
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: User does not have permission to view the code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        200:
          description: ID Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnexpectedError"
  /shiftTreeCodeGenerate:
    get:
      summary: Generates a new join-code for shiftree; used with generate button
      security:
        - Bearer: []
      description: Generates the Code for a shiftTree, if the user making request is Owner
      responses:
        401:
          description: Unauthorised
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: User does not have permission to view the code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        200:
          description: ID Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnexpectedError"
      parameters:
        - name: ShiftTreeID
          in: query
          schema:
            $ref: "#/components/schemas/UUID"
          description: ShiftTreeID to generate code for
          required: true
  /joinShiftTree:
    put:
      summary: Joins a shiftree with given join-code
      security:
        - Bearer: []
      description: Adds a user to the Shiftree
      parameters:
        - name: JoinCode
          in: query
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        404:
          description: UUID does not have corresponding ShiftTree
        204:
          description: Request To Join Successful
        500:
          description: Unable to add User to Schedule
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnexpectedError"

  /schedules/{scheduleId}:
    get:
      security:
        - Bearer: []
      summary: Get schedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Get detailed info about a schedule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleInfo"
        404:
          description: Schedule with specified ID does not exist, or user does not have access to it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      security:
        - Bearer: []
      summary: Delete schedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Schedule deleted
        404:
          description: Schedule with specified ID does not exist, or user does not have access to it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: User does not have permission to delete the schedule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /schedules/{scheduleId}/ics:
    get:
      security:
        - Bearer: []
      summary: Get schedule in ICS Format
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - ics
                properties:
                  ics:
                    type: string
        403:
          description: User does not have permission to view the type of data requested
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Schedule with specified ID does not exist, or user does not have access to it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /schedules/{scheduleId}/csv:
    get:
      security:
        - Bearer: []
      summary: Get schedule in CSV format
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - shifts
              - assignments
        - name: tz
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - csv
                properties:
                  csv:
                    type: string
        403:
          description: User does not have permission to view the type of data requested
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Schedule with specified ID does not exist, or user does not have access to it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /removeUser/{scheduleID}:
    delete:
      security:
        - Bearer: []
      summary: |
        Remove a user from the specified schedule. If no user is passed, the current user is removed.
        Otherwise, the current user must the owner of the schedule, and the specified user will be removed.
      parameters:
        - name: userID
          in: query
          required: false
          schema:
            type: string
            format: uuid
            nullable: true
        - name: scheduleID
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Success
        404:
          description: Schedule does not exist or user not in schedule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: Current user does not have permission to remove target user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnexpectedError"
  /schedules/{scheduleId}/members:
    get:
      security:
        - Bearer: []
      summary: Get schedule members
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserInfoPreview"
        404:
          description: Schedule with specified ID does not exist, or user does not have access to it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: User does not have permission to view the members
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /schedules/{scheduleId}/shifts:
    get:
      security:
        - Bearer: []
      summary: Get schedule shifts
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShiftInfo"
        404:
          description: Schedule with specified ID does not exist, or user does not have access to it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      security:
        - Bearer: []
      summary: Add shift to schedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShiftCreateInfo"
      responses:
        201:
          description: Created shift
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShiftInfo"
        404:
          description: Schedule with specified ID does not exist, or user does not have access to it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: User does not have permission to modify the schedule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        400:
          description: Shift start time must be before shift end time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /schedules/{scheduleId}/signups:
    get:
      security:
        - Bearer: []
      summary: Get schedule signups
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShiftWithSignups"
        404:
          description: Schedule with specified ID does not exist, or user does not have access to it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: User does not have permission to view the signups
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /autoschedule/{scheduleId}:
    post:
      security:
        - Bearer: []
      summary: Generate shift assignments given a filled out shift-tree
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Successful

  /schedules/{scheduleId}/user-signups:
    get:
      security:
        - Bearer: []
      summary: Get schedule signups for the current user
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
        404:
          description: Schedule with specified ID does not exist/inaccessible, or user has not signed up for any shifts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: User does not have permission to view the signups
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /schedules/{scheduleId}/user-assigned:
    get:
      security:
        - Bearer: []
      summary: Get assigned schedule shifts for the current user
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
        404:
          description: Schedule does not exist, user does not have access or has not be assigned shifts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: User does not have permission to view shifts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /shifts/{shiftId}:
    put:
      security:
        - Bearer: []
      summary: Edit shfit
      parameters:
        - name: shiftId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
      responses:
        204:
          description: Shift updated
        404:
          description: Shift with specified ID does not exist, or user does not have access to it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: User does not have permission to modify the shift
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        400:
          description: Shift start time must be before shift end time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      security:
        - Bearer: []
      summary: Delete shift
      parameters:
        - name: shiftId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Shift deleted
        404:
          description: Shift with specified ID does not exist, or user does not have access to it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: User does not have permission to modify the shift
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /signups/{shiftId}:
    post:
      security:
        - Bearer: []
      summary: Sign up user for shift
      description: |
        If `userId` is provided and the current user is a manager of the schedule, the specified user
        will be signed up for the shift.
      parameters:
        - name: shiftId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  description: User to sign up, can only be another user if the current user is a manager
                  type: string
                weight:
                  type: number
                  description: Weight of the user's preference for this shift
      responses:
        204:
          description: User added to shift
        404:
          description: Shift with specified ID does not exist, or user does not have access to it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: User does not have permission to modify the shift
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        400:
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      security:
        - Bearer: []
      summary: Remove sign up for shift
      description: |
        If `userId` is provided and the current user is a manager of the schedule, the specified user
        will have their sign up cancelled.
      parameters:
        - name: shiftId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          description: User to remove, can only be another user if the current user is a manager
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: User removed from shift
        404:
          description: Shift with specified ID does not exist, or user does not have access to it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: User does not have permission to modify the shift
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        400:
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
  schemas:
    UnexpectedError:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Error:
      required:
        - error
      properties:
        error:
          type: string
        detail:
          type: string
    Credentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    RegistrationCredentials:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - username
        - email
        - password
    User:
      type: object
      properties:
        name:
          type: string
        accessToken:
          type: string
      required:
        - name
        - accessToken
    UserInfoPreview:
      type: object
      required:
        - id
        - displayName
        - email
      properties:
        id:
          type: string
          format: uuid
        displayName:
          type: string
        email:
          type: string
        profileImageUrl:
          type: string

    UUID:
      type: string
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"

    ScheduleInfo:
      allOf:
        - $ref: "#/components/schemas/ScheduleInfoPreview"

    ScheduleInfoPreview:
      type: object
      required:
        - id
        - name
        - description
        - owner
        - startTime
        - endTime
        - role
        - state
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        owner:
          $ref: "#/components/schemas/UserInfoPreview"
        startTime:
          type: string
          format: date-time
          nullable: true
        endTime:
          type: string
          format: date-time
          nullable: true
        role:
          type: string
          enum:
            - owner
            - member
            - manager
        state:
          type: string
          enum:
            - open
            - closed

    ShiftInfo:
      type: object
      required:
        - id
        - name
        - description
        - startTime
        - endTime
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time

    ShiftCreateInfo:
      type: object
      required:
        - name
        - startTime
        - endTime
      properties:
        name:
          type: string
        description:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time

    SignupInfo:
      properties:
        user:
          $ref: "#/components/schemas/UserInfoPreview"
        weight:
          type: integer

    ShiftWithSignups:
      allOf:
        - $ref: "#/components/schemas/ShiftInfo"
      properties:
        signups:
          type: array
          items:
            $ref: "#/components/schemas/SignupInfo"
